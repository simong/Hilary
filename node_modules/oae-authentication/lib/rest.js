/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var OAE = require('oae-util/lib/oae');

var AuthenticationAPI = require('oae-authentication');

//////////////////////////////
// AUTHENTICATION PROVIDERS //
//////////////////////////////

require('./strategies/cas/rest');
require('./strategies/facebook/rest');
require('./strategies/google/rest');
require('./strategies/ldap/rest');
require('./strategies/local/rest');
require('./strategies/oauth/rest');
require('./strategies/shibboleth/rest');
require('./strategies/signed/rest');
require('./strategies/twitter/rest');


/**
 * @REST postAuthLogout
 *
 * Log out
 *
 * @Server      admin,tenant
 * @Method      POST
 * @Path        /auth/logout
 * @Return      {void}
 */
OAE.globalAdminRouter.on('post', '/api/auth/logout', AuthenticationAPI.logout);
OAE.tenantRouter.on('post', '/api/auth/logout', AuthenticationAPI.logout);

/**
 * Convenience function to handle requesting the user's login ids
 *
 * @param  {Request}    req     The express request
 * @param  {Response}   res     The express response
 * @api private
 */
var _getUserLoginIds = function(req, res) {
    AuthenticationAPI.getUserLoginIds(req.ctx, req.params.userId, function(err, loginIds) {
        if (err) {
            return res.send(err.code, err.msg);
        }

        return res.send(200, loginIds);
    });
};

/**
 * @REST getAuthLoginIds
 *
 * Get the login ids that are mapped to a user.
 *
 * @Server      admin,tenant
 * @Method      GET
 * @Path        /auth/loginIds/{userId}
 * @PathParam   {string}        userId        The id of the user to return the login ids for
 * @Return      {UserLoginIds}                The user's login ids
 * @HttpResponse                200           User login ids available
 * @HttpResponse                400           A user id must be provided
 * @HttpResponse                401           Only logged in users can request the login ids for a user
 * @HttpResponse                401           You are not authorized to request the login ids for this user
 * @HttpResponse                404           The specified user could not be found
 */
OAE.globalAdminRouter.on('get', '/api/auth/loginIds/:userId', _getUserLoginIds);
OAE.tenantRouter.on('get', '/api/auth/loginIds/:userId', _getUserLoginIds);
