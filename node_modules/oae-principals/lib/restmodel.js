/*!
* Copyright 2014 Apereo Foundation (AF) Licensed under the
* Educational Community License, Version 2.0 (the "License"); you may
* not use this file except in compliance with the License. You may
* obtain a copy of the License at
*
*     http://opensource.org/licenses/ECL-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an "AS IS"
* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
* or implied. See the License for the specific language governing
* permissions and limitations under the License.
*/


/**
 * @RESTModel BasicUser
 *
 * @Required  [displayName,id,lastModified,picture,resourceType,tenant,visibility]
 * @Property    {string}            displayName         Name to display for user
 * @Property    {string}            id                  Unique identifier for user
 * @Property    {string}            lastModified        Time resource last modified (epoch format)
 * @Property    {PictureInfo}       picture             Thumbnails and pictures for user
 * @Property    {string}            resourceType        Type of resource (user)
 * @Property    {BasicTenant}       tenant              Tenant information for user
 * @Property    {string}            visibility          Visibility of user              [loggedin,private,public]
 */

/**
 * @RESTModel BasicGroup
 *
 * @Required    [displayName,id,lastModified,profilePath,tenant,resourceType,visibility]
 * @Property    {string}        canJoin                 Can current user join group
 * @Property    {string}        description             Description of group
 * @Property    {string}        displayName             Name to display for group
 * @Property    {string}        id                      Unique identifier for group
 * @Property    {boolean}       isManager               Is current user manager of group
 * @Property    {boolean}       isMember                Is current user a member of group
 * @Property    {string}        joinable                Can users join group            [no,request,yes]
 * @Property    {number}        lastModified            Time information was last modified (epoch format)
 * @Property    {PictureInfo}   picture                 Thumbnail information
 * @Property    {string}        profilePath             Relative URL for group's main page
 * @Property    {string}        resourceType            Type of resource (group)
 * @Property    {Signature}     signature               Access control for group
 * @Property    {TenantInfo}    tenant                  Tenant for group
 * @Property    {string}        visibility              Visibility of group             [loggedin,private,public]
 */

/**
 * @RESTModel Me
 *
 * @Required    [displayName,id,lastModified,profilePath,tenant,resourceType,visibility]
 * @Property    {number}        acceptedTC              Time user accepted terms and conditions (epoch format)
 * @Property    {string}        authenticationStrategy  How is user authenticated       [cas,facebook,google,ldap,local,oauth,shibboleth,signed,twitter]
 * @Property    {string}        displayName             Name to display for user
 * @Property    {string}        email                   Email address for user
 * @Property    {string}        emailPreference         Email preferences for user      [daily,immediate,weekly]
 * @Property    {string}        id                      Unique identifier for user
 * @Property    {boolean}       isGlobalAdmin           Is user global administrator
 * @Property    {boolean}       isTenantAdmin           Is user tenant administrator
 * @Property    {number}        lastModified            Time user's information was last modified (epoch format)
 * @Property    {string}        locale                  Locale for user (e.g. en_US)
 * @Property    {boolean}       needsToAcceptTC         Does user need to accept terms and conditions
 * @Property    {number}        notificationsLastRead   Time user last read (epoch format)
 * @Property    {number}        notificationsUnread     Number of unread notifications for user
 * @Property    {PictureInfo}   picture                 User's thumbnail information
 * @Property    {string}        profilePath             URL for user's main page
 * @Property    {string}        publicAlias             Public alias for user
 * @Property    {string}        resourceType            Type of resource (user)
 * @Property    {Signature}     signature               Access control for user
 * @Property    {TenantInfo}    tenant                  User's tenant
 * @Property    {string}        visibility              Visibility of user              [loggedin,private,public]
 */

/**
 * @RESTModel Member
 *
 * @Required    [profile,role]
 * @Property    {BasicUser}     profile                 Profile of member
 * @Property    {string}        role                    Role of member          [manager,member,viewer]
 */

/**
 * @RESTModel MemberList
 *
 * @Required    [members]
 * @Property    {string[]}      members                 Array of unique identifiers(s) for user(s)
 */

/**
 * @RESTModel MembershipsResponse
 *
 * @Required    [nextToken,results]
 * @Property    {?????[]}       results                 Array of members associated with object
 * @Property    {string}        nextToken               Marker to allow continuation of search (empty if search has been exhausted)
 */

/**
 * @RESTModel MembersResponse
 *
 * @Required    [nextToken,results]
 * @Property    {Member[]}      results                 Array of members associated with object
 * @Property    {string}        nextToken               Marker to allow continuation of search (empty if search has been exhausted)
 */

/**
 * @RESTModel Membership
 *
 * @Required    []
 * @Property    {boolean}       {userId}                Should identified user be included in group
 */

/**
 * @RESTModel PictureInfo
 *
 * @Required    []
 * @Property    {string}        large                   URL for large image of resource
 * @Property    {string}        medium                  URL for medium image of resource
 * @Property    {string}        small                   URL for small image of resource
 */

/**
 * @RESTModel Profile
 *
 * @Required    [id,lastModified,profilePath,tenant,resourceType,visibility]
 * @Property    {number}        acceptedTC              Time user accepted terms and conditions (epoch format)
 * @Property    {string}        canJoin                 Can current user join group
 * @Property    {string}        description             Description of group
 * @Property    {string}        displayName             Name to display for user/group
 * @Property    {string}        email                   Email address for user
 * @Property    {string}        emailPreference         Email preferences for user      [daily,immediate,weekly]
 * @Property    {string}        id                      Unique identifier for user/group
 * @Property    {boolean}       isManager               Is current user manager of group
 * @Property    {boolean}       isMember                Is current user a member of group
 * @Property    {string}        joinable                Can users join group            [no,request,yes]
 * @Property    {number}        lastModified            Time information was last modified (epoch format)
 * @Property    {string}        locale                  Locale for user (e.g. en_US)
 * @Property    {number}        notificationsLastRead   Time user last read (epoch format)
 * @Property    {number}        notificationsUnread     Number of unread notifications for user
 * @Property    {PictureInfo}   picture                 Thumbnail information
 * @Property    {string}        profilePath             URL for user/group's main page
 * @Property    {string}        publicAlias             Public alias for user
 * @Property    {string}        resourceType            Type of resource                [group,user]
 * @Property    {Signature}     signature               Access control for group
 * @Property    {TenantInfo}    tenant                  Tenant for user/group
 * @Property    {string}        visibility              Visibility of user/group        [loggedin,private,public]
 */

/**
 * @RESTModel TermsAndConditions
 *
 * @Required    [lastUpdate,text]
 * @Property    {number}        lastUpdate                Time terms and conditions were last updated (epoch format)
 * @Property    {string}        text                      Text of terms and conditions
 */

/**
 * @RESTModel User
 *
 * @Required    [id,lastModified,profilePath,tenant,resourceType,visibility]
 * @Property    {string}        displayName             Name to display for user
 * @Property    {string}        email                   Email address for user
 * @Property    {string}        emailPreference         Email preferences for user [daily,immediate,weekly]
 * @Property    {string}        id                      Unique identifier for user
 * @Property    {number}        lastModified            Time user's information was last modified (epoch format)
 * @Property    {string}        locale                  Locale for user (e.g. en_US)
 * @Property    {PictureInfo}   picture                 User's thumbnail information
 * @Property    {string}        profilePath             URL for user's main page
 * @Property    {string}        publicAlias             Public alias for user
 * @Property    {string}        resourceType            Type of resource (user)
 * @Property    {TenantInfo}    tenant                  User's tenant
 * @Property    {string}        visibility              Visibility of user      [loggedin,private,public]
 */

/**
 * @RESTModel ViewerList
 *
 * @Required    [viewers]
 * @Property    {string[]}      viewers                 Unique identifiers of users
 */
