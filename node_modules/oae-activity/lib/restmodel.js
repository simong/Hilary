/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * @RESTModel Activity
 *
 * @Required    [oae:activityId,oae:activityType,actor,object,published,verb]
 * @Property    {string}        oae:activityId          Unique identifier for activity
 * @Property    {string}        oae:activityType        Type of activity [content-add-to-library,content-comment,content-create,content-update,content-update-member-role,content-update-visibility,content-restored-revision,content-revision,content-share,discussion-add-to-library,discussion-create,discussion-message,discussion-share,discussion-update,discussion-update-member-role,discussion-update-visibility,following-follow,group-add-member,group-create,group-join,group-update,group-update-member-role,group-update-visibility,user-update]
 * @Property    {Actor}         actor                   Entity responsible for activity
 * @Property    {Object}        object                  Object of activity
 * @Property    {number}        published               Time of activity (epoch format)
 * @Property    {Target}        target                  Target of activity
 * @Property    {string}        verb                    Action of activity [add,create,follow,join,post,share,update]
 */

/**
 * @RESTModel ActivityContent
 *
 * @Required    []
 * @Property    {ActivityContentCollabdoc}  (activityContentCollabdoc)  Used when content is a collabdoc
 * @Property    {ActivityContentFile}       (activityContentFile)       Used when content is a file
 * @Property    {ActivityContentLink}       (activityContentLink)       Used when content is a link
 */

/**
 * @RESTModel ActivityContentCollabdoc
 *
 * @Required    [displayName,id,oae:id,oae:profilePath,oae:resourceSubType,oae:revisionId,oae:tenant,oae:visibility,objectType,url]
 * @Property    {string}        displayName             Display name for collabdoc
 * @Property    {string}        id                      API URL for collabdoc
 * @Property    {string}        oae:id                  Unique identifier for collabdoc
 * @Property    {string}        oae:profilePath         Path to collabdoc's profile in OAE
 * @Property    {string}        oae:resourceSubType     Subtype of content object                       [collabdoc]
 * @Property    {string}        oae:revisionId          Unique identifier for revision of collabdoc
 * @Property    {BasicTenant}   oae:tenant              Tenant of collabdoc
 * @Property    {string}        oae:visibility          Visibility of collabdoc                         [loggedin,private,public]
 * @Property    {string}        objectType              Type of object                                  [content]
 * @Property    {string}        url                     Full URL to collabdoc's profile in OAE
 */

/**
 * @RESTModel ActivityContentComment
 *
 * @Required    [author,content,id,oae:id,oae:messageBoxId,oae:tenant,oae:threadKey,objectType,published,url]
 * @Property    {ActorUser}     author                  Author of comment
 * @Property    {string}        content                 Content of comment
 * @Property    {string}        id                      API URL for object
 * @Property    {string}        oae:id                  Unique identifier for object
 * @Property    {string}        oae:messageBoxId        Unique identifier for subject of comment
 * @Property    {BasicTenant}   oae:tenant              Tenant of object
 * @Property    {string}        oae:threadKey           Unique identifier for message thread
 * @Property    {string}        objectType              Type of object                                  [content-comment]
 * @Property    {number}        published               Time of activity (epoch format)
 * @Property    {string}        url                     Relative URL to object
 */

/**
 * @RESTModel ActivityContentFile
 *
 * @Required    [displayName,id,image,oae:id,oae:mimeType,oae:profilePath,oae:resourceSubType,oae:revisionId,oae:tenant,oae:visibility,objectType,url]
 * @Property    {string}        displayName             Display name for file content
 * @Property    {string}        id                      API URL for file content
 * @Property    {ActivityImage} image                   Display image for file content
 * @Property    {string}        oae:id                  Unique identifier for file content
 * @Property    {string}        oae:mimeType            MIME type of file resource (e.g. "text/plain")
 * @Property    {string}        oae:profilePath         Path to file content's profile in OAE
 * @Property    {string}        oae:resourceSubType     Subtype of content object                       [file]
 * @Property    {string}        oae:revisionId          Unique identifier for revision of file content
 * @Property    {BasicTenant}   oae:tenant              Tenant of file content
 * @Property    {string}        oae:visibility          Visibility of file content                      [loggedin,private,public]
 * @Property    {string}        objectType              Type of object                                  [content]
 * @Property    {string}        url                     Full URL to file content's profile in OAE
 */

/**
 * @RESTModel ActivityContentLink
 *
 * @Required    [displayName,id,image,oae:id,oae:profilePath,oae:resourceSubType,oae:revisionId,oae:tenant,oae:visibility,objectType,url]
 * @Property    {string}        displayName             Display name for link
 * @Property    {string}        id                      API URL for link
 * @Property    {ActivityImage} image                   Display image for link
 * @Property    {string}        oae:id                  Unique identifier for link
 * @Property    {string}        oae:profilePath         Path to link's profile in OAE
 * @Property    {string}        oae:resourceSubType     Subtype of content object                       [link]
 * @Property    {string}        oae:revisionId          Unique identifier for revision of link
 * @Property    {BasicTenant}   oae:tenant              Tenant of link
 * @Property    {string}        oae:visibility          Visibility of link                              [loggedin,private,public]
 * @Property    {string}        objectType              Type of object                                  [content]
 * @Property    {string}        url                     Full URL to link's profile in OAE
 */

/**
 * @RESTModel ActivityDiscussion
 *
 * @Required    [displayName,id,oae:id,oae:profilePath,oae:tenant,oae:visibility,objectType,url]
 * @Property    {string}        displayName             Display name for discussion
 * @Property    {string}        id                      API URL for discussion
 * @Property    {string}        oae:id                  Unique identifier for discussion
 * @Property    {string}        oae:profilePath         Path to discussion's profile in OAE
 * @Property    {BasicTenant}   oae:tenant              Tenant of discussion
 * @Property    {string}        oae:visibility          Visibility of discussion                        [loggedin,private,public]
 * @Property    {string}        objectType              Type of object                                  [discussion]
 * @Property    {string}        url                     Full URL to discussion's profile in OAE
 */

/**
 * @RESTModel ActivityDiscussionMessage
 *
 * @Required    [author,content,id,oae:id,oae:messageBoxId,oae:tenant,oae:threadKey,objectType,published,url]
 * @Property    {ActorUser}     author                  Author of message
 * @Property    {string}        content                 Content of message
 * @Property    {string}        id                      API URL for object
 * @Property    {string}        oae:id                  Unique identifier for message
 * @Property    {string}        oae:messageBoxId        Unique identifier for discussion
 * @Property    {BasicTenant}   oae:tenant              Tenant of discussion
 * @Property    {string}        oae:threadKey           Unique identifier for message thread
 * @Property    {string}        objectType              Type of object                                  [discussion-message]
 * @Property    {number}        published               Time of activity (epoch format)
 * @Property    {string}        url                     Relative URL to object
 */

/**
 * @RESTModel ActivityGroup
 *
 * @Required    [displayName,id,image,oae:id,oae:joinable,oae:profilePath,oae:tenant,oae:thumbnail,oae:visibility,objectType,url]
 * @Property    {string}        displayName             Display name for group
 * @Property    {string}        id                      API URL for group
 * @Property    {ActivityImage} image                   Display image for group
 * @Property    {string}        oae:id                  Unique identifier for group
 * @Property    {string}        oae:joinable            Can users join group                            [no,request,yes]
 * @Property    {string}        oae:profilePath         Path to group's profile in OAE
 * @Property    {BasicTenant}   oae:tenant              Tenant of group
 * @Property    {Picture}       oae:thumbnail           Thumbnail image for group
 * @Property    {string}        oae:visibility          Visibility of group                             [loggedin,private,public]
 * @Property    {string}        objectType              Type of object                                  [group]
 * @Property    {string}        url                     Full URL to group's profile in OAE
 */

/**
 * @RESTModel ActivityImage
 *
 * @Required    [height,url,width]
 * @Property    {number}        height                  Height of image in pixels
 * @Property    {string}        url                     URL for image
 * @Property    {number}        width                   Width of image in pixels
 */

/**
 * @RESTModel ActivityStream
 *
 * @Required    [items,nextToken]
 * @Property    {Activity[]}    items                   Array of activity items
 * @Property    {string}        nextToken               Marker to allow continuation of list (empty if list has been exhausted)
 */

/**
 * @RESTModel ActivityUser
 *
 * @Required    [displayName,id,image,oae:id,oae:profilePath,oae:tenant,oae:thumbnail,oae:visibility,objectType,url]
 * @Property    {string}        displayName             Display name for user
 * @Property    {string}        id                      API URL for user
 * @Property    {ActivityImage} image                   Display image for user
 * @Property    {string}        oae:id                  Unique identifier for user
 * @Property    {string}        oae:profilePath         Path to user's profile in OAE
 * @Property    {BasicTenant}   oae:tenant              Tenant of user
 * @Property    {Picture}       oae:thumbnail           Thumbnail image for user
 * @Property    {string}        oae:visibility          Visibility of object                            [loggedin,private,public]
 * @Property    {string}        objectType              Type of object                                  [user]
 * @Property    {string}        url                     Full URL to user's profile in OAE
 */

/**
 * @RESTModel Actor
 *
 * @Required    []
 * @Property    {ActorCollection}   (actorCollection)     Used when actor is a collection
 * @Property    {ActivityGroup}     (activityGroup)       Used when actor is a group
 * @Property    {ActivityUser}      (activityUser)        Used when actor is a user
 */

/**
 * @RESTModel ActorCollection
 *
 * @Required    [oae:collection]
 * @Property    {Actor[]}       oae:collection          Array of actors
 * @Property    {string}        objectType              Type of actor                           [collection]
 */

/**
 * @RESTModel NotificationsRead
 *
 * @Required    [lastReadTime]
 * @Property    {string}        lastReadTime            Time notifications marked as read (epoch format)
 */

/**
 * @RESTModel Object
 *
 * @Required    []
 * @Property    {ObjectCollection}          (objectCollection)          Used when object is a collection
 * @Property    {ActivityContent}           (activityContent)           Used when object is a content item
 * @Property    {ActivityContentComment}    (activityContentComment)    Used when object is a comment on a content item
 * @Property    {ActivityDiscussion}        (activityDiscussion)        Used when object is a discussion
 * @Property    {ActivityDiscussionMessage} (activityDiscussionMessage) Used when object is a message in a discussion
 * @Property    {ActivityGroup}             (activityGroup)             Used when object is a group
 * @Property    {ActivityUser}              (activityUser)              Used when object is a user
 */

/**
 * @RESTModel ObjectCollection
 *
 * @Required    [collection,objectType]
 * @Property    {Object[]}      oae:collection          Array of objects
 * @Property    {string}        objectType              Type of object      [collection]
 */

/**
 * @RESTModel Target
 *
 * @Required    []
 * @Property    {TargetCollection}          (targetCollection)          Used when target is a collection
 * @Property    {ActivityContent}           (activityContent)           Used when target is a content item
 * @Property    {ActivityDiscussion}        (activityDiscussion)        Used when target is a discussion
 * @Property    {ActivityGroup}             (activityGroup)             Used when target is a group
 * @Property    {ActivityUser}              (activityUser)              Used when target is a user
 */

/**
 * @RESTModel TargetCollection
 *
 * @Required    [collection,targetType]
 * @Property    {Target[]}      oae:collection          Array of targets
 * @Property    {string}        targetType              Type of target      [collection]
 */
