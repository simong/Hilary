/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

/**
 * @RESTModel Actor
 *
 * @Required    [displayName,id,oae:id,objectType]
 * @Property    {number}        acceptedTC              Time terms and conditions last accepted by actor (epoch format)
 * @Property    {string}        displayName             Display name for actor
 * @Property    {string}        email                   Email address of actor
 * @Property    {string}        emailPreference         Email preference of actor [daily,immediate,weekly]
 * @Property    {string}        id                      API URL for actor
 * @Property    {Image}         image                   Display image for actor
 * @Property    {number}        lastModified            Time actor last modified (epoch format)
 * @Property    {string}        locale                  Locale of actor (e.g. "en_US")
 * @Property    {number}        notificationsLastRead   Time notifications last read by actor (epoch format)
 * @Property    {number}        notificationsUnread     Number of notifications not read by actor
 * @Property    {Object[]}      oae:collection          Collection of multiple objects
 * @Property    {string}        oae:id                  Unique identifier for actor
 * @Property    {string}        oae:profilePath         Path to actor's profile in OAE
 * @Property    {TenantInfo}    oae:tenant              Tenant of actor
 * @Property    {Picture}       oae:thumbnail           Thumbnail image for actor
 * @Property    {string}        oae:visibility          Visibility of actor [loggedin,private,public]
 * @Property    {string}        objectType              Type of actor [group,user]
 * @Property    {PictureInfo}   picture                 Images for actor
 * @Property    {string}        profilePath             Path to actor's profile in OAE
 * @Property    {string}        publicAlias             Public alias of actor
 * @Property    {string}        resourceType            Type of actor [group,user]
 * @Property    {TenantInfo}    tenant                  Tenant of actor
 * @Property    {string}        url                     Full URL to actor's profile in OAE
 * @Property    {string}        visibility              Visibility of actor [loggedin,private,public]
 */

/**
 * @RESTModel Activity
 *
 * @Required    [oae:activityId,oae:activityType,actor,object,published,verb]
 * @Property    {string}        oae:activityId          Unique identifier for activity
 * @Property    {string}        oae:activityType        Type of activity [content-add-to-library,content-comment,content-create,content-update,content-update-member-role,content-update-visibility,content-restored-revision,content-revision,content-share,discussion-add-to-library,discussion-create,discussion-message,discussion-share,discussion-update,discussion-update-member-role,discussion-update-visibility,following-follow,group-add-member,group-create,group-join,group-update,group-update-member-role,group-update-visibility,user-update]
 * @Property    {Actor}         actor                   Entity responsible for activity
 * @Property    {Object}        object                  Object of activity
 * @Property    {number}        published               Time of activity (epoch format)
 * @Property    {Target}        target                  Target of activity
 * @Property    {string}        verb                    Action of activity [add,create,follow,join,post,share,update]
 */

/**
 * @RESTModel ActivityStream
 *
 * @Required    [items,nextToken]
 * @Property    {Activity[]}    items                   Array of activity items
 * @Property    {string}        nextToken               Marker to allow continuation of list (empty if list has been exhausted)
 */

/**
 * @RESTModel NotificationsRead
 *
 * @Required    [lastReadTime]
 * @Property    {string}        lastReadTime            Time notifications marked as read (epoch format)
 */

/**
 * @RESTModel Object
 *
 * @Required    [objectType]
 * @Property    {Actor}         author                  Author of comment
 * @Property    {string}        content                 Content of comment
 * @Property    {number}        created                 Time object created (epoch format)
 * @Property    {string}        createdBy               Unique identifier for creator of object
 * @Property    {string}        description             Description of object
 * @Property    {string}        displayName             Display name for object
 * @Property    {string}        id                      API URL for object
 * @Property    {number}        lastModified            Time object last modified (epoch format)
 * @Property    {Object[]}      oae:collection          Collection of multiple objects
 * @Property    {string}        oae:id                  Unique identifier for object
 * @Property    {string}        oae:joinable            Can current user join group [no,request,yes]
 * @Property    {string}        oae:messageBoxId        Unique identifier for discussion
 * @Property    {string}        oae:mimeType            MIME type of file resource (e.g. "text/plain")
 * @Property    {string}        oae:profilePath         Path to object's profile in OAE
 * @Property    {string}        oae:resourceSubType     Subtype of content object [collabdoc,file,link]
 * @Property    {string}        oae:revisionId          Unique identifier for revision of content object
 * @Property    {TenantInfo}    oae:tenant              Tenant of object
 * @Property    {string}        oae:threadKey           Unique identifier for message thread
 * @Property    {string}        oae:visibility          Visibility of object [loggedin,private,public]
 * @Property    {Image}         oae:wideImage           Display image for object
 * @Property    {string}        objectType              Type of object [collection,content,content-comment,discussion,discussion-message,group,user]
 * @Property    {string}        profilePath             Path to object's profile in OAE
 * @Property    {number}        published               Time of activity (epoch format)
 * @Property    {string}        resourceType            Type of resource [collection,content,discussion]
 * @Property    {string}        url                     Full URL to object's profile in OAE
 * @Property    {string}        visibility              Visibility of object [loggedin,private,public]
 */

/**
 * @RESTModel Target
 *
 * @Required    [objectType]
 * @Property    {number}        acceptedTC              Time terms and conditions last accepted by actor (epoch format)
 * @Property    {Actor}         author                  Author of comment
 * @Property    {string}        content                 Content of comment
 * @Property    {number}        created                 Time object created (epoch format)
 * @Property    {string}        createdBy               Unique identifier for creator of object
 * @Property    {string}        description             Description of object
 * @Property    {string}        displayName             Display name for actor
 * @Property    {string}        email                   Email address of actor
 * @Property    {string}        emailPreference         Email preference of actor [daily,immediate,weekly]
 * @Property    {string}        id                      API URL for actor
 * @Property    {Image}         image                   Display image for actor
 * @Property    {number}        lastModified            Time actor last modified (epoch format)
 * @Property    {string}        locale                  Locale of actor (e.g. "en_US")
 * @Property    {number}        notificationsLastRead   Time notifications last read by actor (epoch format)
 * @Property    {number}        notificationsUnread     Number of notifications not read by actor
 * @Property    {Object[]}      oae:collection          Collection of multiple objects
 * @Property    {string}        oae:id                  Unique identifier for actor
 * @Property    {string}        oae:joinable            Can current user join group [no,request,yes]
 * @Property    {string}        oae:messageBoxId        Unique identifier for discussion
 * @Property    {string}        oae:mimeType            MIME type of file resource (e.g. "text/plain")
 * @Property    {string}        oae:profilePath         Path to actor's profile in OAE
 * @Property    {string}        oae:resourceSubType     Subtype of content object [collabdoc,file,link]
 * @Property    {string}        oae:revisionId          Unique identifier for revision of content object
 * @Property    {TenantInfo}    oae:tenant              Tenant of actor
 * @Property    {string}        oae:threadKey           Unique identifier for message thread
 * @Property    {Picture}       oae:thumbnail           Thumbnail image for actor
 * @Property    {string}        oae:visibility          Visibility of actor [loggedin,private,public]
 * @Property    {Image}         oae:wideImage           Display image for object
 * @Property    {string}        objectType              Type of actor [collection,content,content-comment,discussion,discussion-message,group,user]
 * @Property    {PictureInfo}   picture                 Images for actor
 * @Property    {string}        profilePath             Path to actor's profile in OAE
 * @Property    {string}        publicAlias             Public alias of actor
 * @Property    {number}        published               Time of activity (epoch format)
 * @Property    {string}        resourceType            Type of actor [group,user]
 * @Property    {TenantInfo}    tenant                  Tenant of actor
 * @Property    {string}        url                     Full URL to actor's profile in OAE
 * @Property    {string}        visibility              Visibility of actor [loggedin,private,public]
 */
