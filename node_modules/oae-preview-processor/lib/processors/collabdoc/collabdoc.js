/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var fs = require('fs');

var RestAPI = require('oae-rest');

var LinkProcessorUtil = require('oae-preview-processor/lib/processors/link/util');
var webshot = require('oae-preview-processor/lib/internal/webshot');

var options = {
    // Show the etherpad container, but hide the editorbar.
    'script': function() {
        $("#editbar").css('display', 'none');
        $("#editorcontainer").css('top', '0px');
    },
    'windowSize': {
        'width': 535,
        'height': 250
    }
};

/**
 * @borrows Interface.test as CollabDocProcessor.test
 */
var test = module.exports.test = function(ctx, contentObj, callback) {
    if (contentObj.resourceSubType === 'collabdoc') {
        callback(null, 10);
    } else {
        callback(null, -1);
    }
};

/**
 * @borrows Interface.generatePreviews as CollabDocProcessor.generatePreviews
 */
var generatePreviews = module.exports.generatePreviews = function(ctx, contentObj, callback) {
    RestAPI.Content.joinCollabDoc(ctx.tenantRestContext, contentObj.id, function(err, data) {
        if (err) {
            return callback(err);
        }

        // Generate a screenshot.
        var path = ctx.baseDir + '/webshot.png';
        webshot.getImage(data.url, path, options, function (err) {
            if (err) {
                log().error({'err': err, 'contentId': ctx.contentId}, 'Could not generate an image.');
                return callback(err);
            }

            LinkProcessorUtil.generatePreviewsFromImage(ctx, path, null, callback);
        });
    });
};
