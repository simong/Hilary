/*!
 * Copyright 2012 Sakai Foundation (SF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://www.osedu.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */

var fs = require('fs');
var mkdirp = require('mkdirp')

var Cleaner = require('oae-util/lib/cleaner');

var PreviewAPI = require('./api');

// OAE Processors
var ImagesProcessor = require('oae-preview-processor/lib/processors/file/images');
var OfficeProcessor = require('oae-preview-processor/lib/processors/file/office');
var PDFProcessor = require('oae-preview-processor/lib/processors/file/pdf');

var DefaultLinkProcessor = require('oae-preview-processor/lib/processors/link/default');
var FlickrLinkProcessor = require('oae-preview-processor/lib/processors/link/flickr');
var SlideShareLinkProcessor = require('oae-preview-processor/lib/processors/link/slideshare');
var VimeoLinkProcessor = require('oae-preview-processor/lib/processors/link/vimeo');
var YoutubeLinkProcessor = require('oae-preview-processor/lib/processors/link/youtube');

var CollabDocProcessor = require('oae-preview-processor/lib/processors/collabdoc/collabdoc');

/**
 * Starts listening for new pieces of content that should be handled.
 */
module.exports = function(config, callback) {
    // Create the previews directory and periodically clean it.
    if (config.previews.enabled) {
        // mkdirp does not throw an error if the directory already exist
        // so there is no need to check that first.
        mkdirp(config.previews.dir, function(err) {
            if (err) {
                return log().error({'err': err}, 'Could not create the previews directory');
            }

            // Periodically clean that directory.
            Cleaner.start(config.previews.dir, config.files.cleaner.interval);
        });
    }

    // Initialize those processors that need it.
    OfficeProcessor.init(config.previews.office, function(err) {
        if (err) {
            return callback(err);
        }

        PDFProcessor.init(config.previews.pdf, function(err) {
            if (err) {
                return callback(err);
            }

            // Register the processors
            PreviewAPI.registerProcessor('oae-file-images', ImagesProcessor);
            PreviewAPI.registerProcessor('oae-file-office', OfficeProcessor);
            PreviewAPI.registerProcessor('oae-file-pdf', PDFProcessor);

            PreviewAPI.registerProcessor('oae-link-default', DefaultLinkProcessor);
            PreviewAPI.registerProcessor('oae-link-flickr', FlickrLinkProcessor);
            PreviewAPI.registerProcessor('oae-link-slideshare', SlideShareLinkProcessor);
            PreviewAPI.registerProcessor('oae-link-vimeo', VimeoLinkProcessor);
            PreviewAPI.registerProcessor('oae-link-youtube', YoutubeLinkProcessor);

            PreviewAPI.registerProcessor('oae-collabdoc', CollabDocProcessor);

            // Start listening.
            PreviewAPI.refreshPreviewConfiguration(config, callback);
        });
    });
};
