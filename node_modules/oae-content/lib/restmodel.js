/*!
 * Copyright 2014 Apereo Foundation (AF) Licensed under the
 * Educational Community License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License. You may
 * obtain a copy of the License at
 *
 *     http://opensource.org/licenses/ECL-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an "AS IS"
 * BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing
 * permissions and limitations under the License.
 */


/**
 * @RESTModel BasicContent
 *
 * @Required    [created,createdBy,displayName,id,lastModified,latestRevisionId,previews,resourceSubType,tenantAlias,visibility]
 * @Property    {number}    created             Timestamp at which this content item was created in milliseconds since epoch
 * @Property    {string}    createdBy           Unique identifier of the user who created this content item
 * @Property    {string}    description         Description of the content item
 * @Property    {string}    displayName         Title of the content item
 * @Property    {string}    id                  Globally unique content ID for this content item
 * @Property    {number}    lastModified        Timestamp at which this content item was modified for the last time in milliseconds since epoch
 * @Property    {string}    latestRevisionId    Unique identifier of the latest revision associated with this piece of content
 * @Property    {Previews}  previews            Preview data of the latest revision of the content item
 * @Property    {string}    resourceSubType     Type of content item                   [collabdoc,file,link]
 * @Property    {string}    tenantAlias         Alias of the tenant this content item is being created in
 * @Property    {string}    visibility          Visibility of the content item         [loggedin,private,public]
 */

/**
 * @RESTModel CollabDocInfo
 *
 * @Required    [url]
 * @Property    {string}    url                 Internal URL to access collaborative document
 */

/**
 * @RESTModel Content
 *
 * @Required    [canShare,created,createdBy,description,displayName,id,isManager,lastModified,latestRevisionId,previews,profilePath,resourceSubType,resourceType,signature,tenant,visibility]
 * @Property    {boolean}    canShare           Can current user share the content
 * @Property    {number}     created            Timestamp at which this content item was created in milliseconds since epoch
 * @Property    {BasicUser}  createdBy          User who created this content item
 * @Property    {string}     description        Description of the content item
 * @Property    {string}     displayName        Title of the content item
 * @Property    {string}     downloadPath       Relative URL to download content source
 * @Property    {string}     etherpadGroupId    Collaborative document group
 * @Property    {string}     etherpadPadId      Collaborative document id
 * @Property    {string}     filename           Name of content file
 * @Property    {string}     id                 Globally unique content ID for this content item
 * @Property    {boolean}    isManager          Is current user a manager of the content
 * @Property    {number}     lastModified       Timestamp at which this content item was modified for the last time in milliseconds since epoch
 * @Property    {Revision}   latestRevision     Information about latest revision of content item
 * @Property    {String}     latestRevisionId   Unique identifier of the latest revision associated with this piece of content
 * @Property    {string}     mime               MIME type for content (e.g. "text/plain")
 * @Property    {Previews}   previews           Preview data of the latest revision of the content item
 * @Property    {string}     profilePath        Relative URL for content's main page
 * @Property    {string}     resourceSubType    Type of content item                   [collabdoc,file,link]
 * @Property    {string}     resourceType       Type of resource                       [content]
 * @Property    {Signature}  signature          Credentials to access content
 * @Property    {number}     size               Size of content file in bytes
 * @Property    {TenantInfo} tenant             Information about the tenant this content item is being created in
 * @Property    {string}     visibility         Visibility of the content item         [loggedin,private,public]
 */

/**
 * @RESTModel ContentList
 *
 * @Required    [nextToken,results]
 * @Property    {Content[]}     results                 Array of content items associated with object
 * @Property    {string}        nextToken               Marker to allow continuation of search (empty if search has been exhausted)
 */

/**
 * @RESTModel NewContent
 *
 * @Required    [displayName,resourceSubType]
 * @Property    {string}            description         Description of content item
 * @Property    {string}            displayName         Name to display for content item
 * @Property    {string}            link                URL for link content
 * @Property    {string[]}          manager             Unique identifier(s) for manager(s) of the content (user creating discussion is always a manager); may also be simple string
 * @Property    {string}            resourceSubType     Content type                        [collabdoc,file,link]
 * @Property    {string[]}          viewer              Unique identifiers(s) for users(s) who can access the content; may also be simple string
 * @Property    {string}            visibility          Visibility for content              [loggedin,private,public]
 */

/**
 * @RESTModel PictureInfo
 *
 * @Required    []
 * @Property    {string}            large               URL for large image of resource
 * @Property    {string}            medium              URL for medium image of resource
 * @Property    {string}            small               URL for small image of resource
 */

/**
 * @RESTModel PreviewFile
 *
 * @Required    [filename,size,uri]
 * @Property    {string}            filename            Name of preview file
 * @Property    {string}            size                Size of preview file        [large,medium,small,thumbnail,wide]
 * @Property    {string}            uri                 URI of preview file
 */

/**
 * @RESTModel PreviewInfo
 *
 * @Required    [contentMetadata,links,previewMetadata,sizes]
 * @Property    {UpdatedContent}     contentMetadata    Updated information about content
 * @Property    {PreviewLink}        links              External link to use as preview image
 * @Property    {PreviewMetadata}    previewMetadata    Updated information about preview
 * @Property    {PreviewSize}        sizes              Size of preview image
 */

/**
 * @RESTModel PreviewLink
 *
 * @Required    [{previewFile}]
 * @Property    {string}        {previewFile}      URL for named preview file
 */

/**
 * @RESTModel PreviewList
 *
 * @Required    [files,signature]
 * @Property    {PreviewFile[]}     files          Files for content preview
 * @Property    {Signature}         signature      Credentials to access content
 */

/**
 * @RESTModel PreviewMetadata
 *
 * @Required    []
 * @Property    {number}     pageCount          Number of pages in document preview
 */

/**
 * @RESTModel Previews
 *
 * @Required    []
 * @Property    {string}     cssScopeClass      CSS class added to stylesheets to scope rules to a particular document preview
 * @Property    {string}     largeUri           URI for large image of content
 * @Property    {string}     mediumUri          URI for medium-sized image of content
 * @Property    {number}     pageCount          Number of pages in document preview
 * @Property    {string}     smallUri           URI for small image of content
 * @Property    {string}     status             Status of preview processing of content         [done,error,ignored,pending]
 * @Property    {number}     total              Number of properties defined for the content's file data
 * @Property    {string}     thumbnailUri       URI for thumbnail image of content
 * @Property    {string}     wideUri            URI for wide-screen image of content
 */

/**
 * @RESTModel PreviewSize
 *
 * @Required    [{previewFile}]
 * @Property    {number}        {previewFile}      Size of named preview file
 */

/**
 * @RESTModel Revision
 *
 * @Required [contentId,created,createdBy,opts,previews,previewsId,revisionId]
 * @Property    {string}        contentId       Unique content ID of the content item
 * @Property    {number}        created         The timestamp that this revision was created (epoch format)
 * @Property    {User}          createdBy       User who created this revision
 * @Property    {string}        filename        File name for uploaded file
 * @Property    {string}        largeUrl        URI for large image of revision
 * @Property    {string}        mediumUrl       URI for medium-sized image of revision
 * @Property    {string}        mime            MIME type for content (e.g. "text/plain")
 * @Property    {Previews}      previews        Preview information for revision
 * @Property    {string}        previewsId      Storage directory of the previews of the revision, within the content item
 * @Property    {string}        revisionId      The ID of the revision
 * @Property    {number}        size            Size of file
 * @Property    {string}        smallUrl        URI for small image of revision
 * @Property    {string}        thumbnailUrl    URI for thumbnail image of revision
 * @Property    {string}        uri             URI for revision
 * @Property    {string}        wideUri         URI for wide-screen preview image of revision
 */

/**
 * @RESTModel RevisionsResponse
 *
 * @Required    [nextToken,results]
 * @Property    {string}        nextToken       Marker to allow continuation of list (empty if list has been exhausted)
 * @Property    {Revision[]}    results         Array of revision information objects
 */

/**
 * @RESTModel Signature
 *
 * @Required    [expires, signature]
 * @Property    {number}        expires                 Time current access signature expires (epoch format)
 * @Property    {string}        signature               Access control signature
 */

/**
 * @RESTModel UpdatedContent
 *
 * @Required    []
 * @Property    {string}        description         Description of content item
 * @Property    {string}        displayName         Name to display for content item
 * @Property    {string}        link                URL for link content
 * @Property    {string}        visibility          Visibility for content              [loggedin,private,public]
 */
